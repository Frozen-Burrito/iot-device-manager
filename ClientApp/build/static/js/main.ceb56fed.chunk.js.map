{"version":3,"sources":["components/NavMenu.js","pages/Layout.js","pages/HomePage.js","components/DeviceCard.js","components/DeviceFilter.js","components/CustomModal.js","pages/DeviceCollection.js","pages/AddDevice.js","pages/DeviceDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","bg","variant","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","Component","displayName","name","Layout","children","fluid","HomePage","href","DeviceCard","thing","handleDeleteAction","e","onDeleteAction","Col","Card","Body","Title","tag","Stack","direction","gap","Dropdown","Button","Menu","Item","onClick","console","log","Subtitle","identifier","labels","split","map","label","Badge","key","replace","c","toUpperCase","Text","style","minHeight","shortDescription","length","substr","DeviceFilter","handleQueryChange","handleLayoutToggle","queryStr","onQueryChange","onLayoutToggle","filters","searchQuery","isGridView","Form","Row","Group","Control","type","placeholder","value","onChange","target","fontSize","disabled","md","CustomModal","handleClose","handleAccept","onCloseModal","onAcceptModal","show","data","Modal","onHide","Header","closeButton","title","body","Footer","actionColor","action","DeviceCollection","things","displayDeleteModal","selectedDeviceId","loading","renderThingCollection","handleDeleteModalDisplay","handleDeleteModalAccept","populateThingData","axios","get","response","_","delete","filter","thingCollection","searchRegEx","RegExp","filteredList","search","xs","selectedDevice","find","t","deleteModalData","content","Spinner","color","AddDevice","device","ipAddress","charLengths","handleSubmit","handleChange","renderAddForm","checked","preventDefault","post","history","push","Label","aria-describedby","muted","Select","aria-label","deviceType","i","lables","DeviceDetails","showDeleteModal","error","renderThingDetails","match","params","getThingDetails","deviceIdentifier","Error","Message","deviceTags","thingDetails","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ceb56fed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Navbar className=\"box-shadow mb-3\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={Link} to=\"/\">Device Registry</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbar-content\" className=\"mr-2\" />\r\n          <Navbar.Collapse id=\"navbar-content\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/devices\">Devices</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/devices/add\" className=\"btn btn-primary text-white\">Add a Device</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { NavMenu } from '../components/NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n\r\n        <Container fluid className=\"mt-5 py-3 bg-light text-dark text-center\">\r\n          Built by FrozenBurrito\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class HomePage extends Component {\r\n  static displayName = HomePage.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Stack, Col, Card, Button, Badge, Dropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class DeviceCard extends Component {\r\n  static displayName = DeviceCard.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      thing: this.props.thing\r\n    };\r\n\r\n    this.handleDeleteAction = this.handleDeleteAction.bind(this);\r\n  }\r\n\r\n  handleDeleteAction(e) {\r\n    this.props.onDeleteAction();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { thing } = this.state;\r\n\r\n    return (\r\n      <Col className=\"mt-3\">\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title tag=\"h5\">\r\n              <Stack direction=\"horizontal\" gap={1}>\r\n                {thing.name}\r\n\r\n                <Dropdown className=\"ms-auto\">\r\n                  <Dropdown.Toggle as={Button} variant=\"transparent\" id=\"dropdown-basic\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={ e => console.log(\"Edit\") }>Edit</Dropdown.Item>\r\n                    <Dropdown.Item onClick={ this.handleDeleteAction }>Remove</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Stack>\r\n            </Card.Title>\r\n            <Card.Subtitle tag=\"h6\" className=\"mb-2 text-muted\">{thing.identifier}</Card.Subtitle>\r\n\r\n            <Stack direction=\"horizontal\" gap={1}>\r\n              {thing.labels.split(', ').map(label => \r\n                <Badge key={label} bg=\"info\">\r\n                  { label.replace(/^\\w/, (c) => c.toUpperCase()) }\r\n                </Badge>\r\n              )}\r\n            </Stack>\r\n\r\n            <Card.Text style={{ minHeight: 96 }}>\r\n              {thing.shortDescription.length > 130 \r\n                ? thing.shortDescription.substr(0, 130) + \"...\"\r\n                : thing.shortDescription\r\n              }\r\n            </Card.Text>\r\n            <Link to={`/devices/${thing.identifier}`} className=\"btn btn-primary\">View</Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Stack, Col, Row, Form, Button, Dropdown } from 'react-bootstrap';\r\n\r\nexport class DeviceFilter extends Component {\r\n  static displayName = DeviceFilter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleLayoutToggle = this.handleLayoutToggle.bind(this);\r\n  }\r\n\r\n  handleQueryChange(queryStr) {\r\n    this.props.onQueryChange(queryStr);\r\n  }\r\n\r\n  handleLayoutToggle(e) {\r\n    this.props.onLayoutToggle();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { searchQuery, isGridView } = this.props.filters;\r\n\r\n    return (\r\n      <Form className=\"mt-4\">\r\n        <Row>\r\n          <Col>\r\n            <Stack direction=\"horizontal\" gap={2}>\r\n              <i className=\"bi bi-search\"></i>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search for a device\"\r\n                  value={ searchQuery }\r\n                  onChange={e => this.handleQueryChange(e.target.value)}/>\r\n              </Form.Group>\r\n\r\n              <Button \r\n                variant=\"light\" \r\n                className=\"me-0\"\r\n                style={{ fontSize: 20 }}\r\n                disabled={ searchQuery.length === 0 }\r\n                onClick={e => this.handleQueryChange('')}>\r\n                <i className=\"bi bi-x\"></i>\r\n              </Button>\r\n            </Stack>\r\n          </Col>\r\n\r\n          <Col md={3}/>\r\n\r\n          <Col md={4}>\r\n            <Stack direction=\"horizontal\" gap={1}>\r\n\r\n              <Dropdown className=\"ms-auto\">\r\n                <Dropdown.Toggle variant=\"light\" id=\"tag-dropdown\">\r\n                  Filter by tag\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>Device</Dropdown.Item>\r\n                  <Dropdown.Item>Sensor</Dropdown.Item>\r\n                  <Dropdown.Item>Temperature</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"light\" id=\"tag-dropdown\">\r\n                  Filter by type\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>Actuator</Dropdown.Item>\r\n                  <Dropdown.Item>Sensor</Dropdown.Item>\r\n                  <Dropdown.Item>Controller</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n\r\n              <Button \r\n                variant=\"light\" \r\n                style={{ fontSize: 16 }}\r\n                onClick={this.handleLayoutToggle}>\r\n                { isGridView \r\n                  ? <i className=\"bi bi-list-task\"></i>\r\n                  : <i className=\"bi bi-grid-3x2-gap\"></i> \r\n                }\r\n              </Button>\r\n            </Stack>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport class CustomModal extends Component {\r\n  static displayName = CustomModal.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleAccept = this.handleAccept.bind(this);\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.onCloseModal();\r\n  }\r\n\r\n  handleAccept() {\r\n    this.props.onAcceptModal();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      show,\r\n      data\r\n    } = this.props;\r\n\r\n    return (\r\n      <Modal show={show} onHide={ this.handleClose }>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{ data.title }</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{ data.body }</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={ this.handleClose }>\r\n            Close\r\n          </Button>\r\n          <Button variant={ data.actionColor} onClick={ this.handleAccept }>\r\n            { data.action }\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Spinner, Row } from 'react-bootstrap';\r\nimport { DeviceCard } from '../components/DeviceCard';\r\nimport { DeviceFilter } from '../components/DeviceFilter';\r\nimport { CustomModal } from '../components/CustomModal';\r\n\r\nexport class DeviceCollection extends Component {\r\n  static displayName = DeviceCollection.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      things: [],\r\n\r\n      filters: {\r\n        searchQuery: '',\r\n        isGridView: true, \r\n      },\r\n      displayDeleteModal: false,\r\n      selectedDeviceId: '',\r\n\r\n      loading: false \r\n    };\r\n\r\n    this.renderThingCollection = this.renderThingCollection.bind(this);\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleLayoutToggle = this.handleLayoutToggle.bind(this);\r\n\r\n    this.handleDeleteModalDisplay = this.handleDeleteModalDisplay.bind(this);\r\n    this.handleDeleteModalAccept = this.handleDeleteModalAccept.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateThingData();\r\n  }\r\n\r\n  async populateThingData() {\r\n    const response = await axios.get('api/things');\r\n    this.setState({ \r\n      things: response.data, \r\n      loading: false \r\n    });\r\n  }\r\n\r\n  handleQueryChange(queryStr) {\r\n    this.setState((state, _) => ({\r\n      filters: { \r\n        ...state.filters,\r\n        searchQuery: queryStr \r\n    }}));\r\n  }\r\n\r\n  handleLayoutToggle() {\r\n    this.setState((state, props) => ({\r\n      filters: {\r\n        ...state.filters,\r\n        isGridView: !state.filters.isGridView\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleDeleteModalDisplay(show, identifier = '') {\r\n\t\tthis.setState((state, _) => ({\r\n      selectedDeviceId: identifier,\r\n\t\t\tdisplayDeleteModal: show\r\n\t\t}));\r\n\t}\r\n\r\n\tasync handleDeleteModalAccept() {\r\n\t\tconsole.log('Removal was confirmed.');\r\n    const { selectedDeviceId: identifier } = this.state;\r\n\r\n\t\tthis.handleDeleteModalDisplay(false);\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`api/things/${identifier}`);\r\n      \r\n      this.setState((state, _) => ({\r\n        things: state.things.filter(thing => thing.identifier !== identifier)\r\n      }));\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Can\\'t delete, an error was raised: ', error);\r\n\t\t}\r\n\t}\r\n\r\n  renderThingCollection() {\r\n\r\n    const { \r\n      things: thingCollection, \r\n      filters: { searchQuery, isGridView }, \r\n    } = this.state;\r\n\r\n    const searchRegEx = new RegExp(searchQuery, \"i\");\r\n    const filteredList = searchQuery.length > 0 \r\n      ? thingCollection.filter(thing => thing.name.search(searchRegEx) >= 0)\r\n      : thingCollection;\r\n\r\n    return (\r\n      <Row xs={1} md={ isGridView ? 3 : 1 } className=\"g-3\">\r\n        {filteredList.map(thing =>\r\n          <DeviceCard \r\n            key={ thing.identifier } \r\n            thing={ thing } \r\n            onDeleteAction={ () => this.handleDeleteModalDisplay(true, thing.identifier) }/>\r\n        )}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, filters, displayDeleteModal, things } = this.state;\r\n\r\n    const selectedDevice = \r\n      things.find(t => t.identifier === this.state.selectedDeviceId);\r\n\r\n    const deleteModalData = {\r\n\t\t\ttitle: `Remove ${selectedDevice ? selectedDevice.name : 'unknown device'}?`,\r\n\t\t\tbody: 'If you confirm this action, the device will be deleted permanently from the collection.',\r\n\t\t\taction: 'Remove',\r\n\t\t\tactionColor: 'danger',\r\n\t\t}\r\n\r\n    let content = loading\r\n      ? <Spinner color=\"dark\" />\r\n      : this.renderThingCollection();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Your Things</h1>\r\n        <p>Here you can view, edit and manage all your intelligent devices.</p>\r\n\r\n        <DeviceFilter \r\n          filters={filters} \r\n          onQueryChange={this.handleQueryChange}\r\n          onLayoutToggle={this.handleLayoutToggle}/>\r\n\r\n        <hr/>  \r\n\r\n        {content}\r\n\r\n        <CustomModal\r\n          show={ displayDeleteModal }\r\n          data={ deleteModalData }\r\n          onAcceptModal={ this.handleDeleteModalAccept } \r\n\t\t\t\t\tonCloseModal={ () => this.handleDeleteModalDisplay(false) }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport class AddDevice extends Component {\r\n  static displayName = AddDevice.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      device: {\r\n        identifier: 'some-identifier',\r\n        name: '',\r\n        labels: '',\r\n        shortDescription: '',\r\n        type: 0,\r\n        ipAddress: ''\r\n      }, \r\n      charLengths: {\r\n        name: 50,\r\n        shortDescription: 300\r\n      },\r\n      loading: false \r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.renderAddForm = this.renderAddForm.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.populateThingData();\r\n  // }\r\n\r\n  handleChange(e)\r\n  {\r\n    const { target } = e;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const { name } = target;\r\n\r\n    this.setState({\r\n      device: {\r\n        ...this.state.device,\r\n        [name]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleSubmit(e)\r\n  {\r\n    e.preventDefault();\r\n    console.log(this.state.device);\r\n    await axios.post('api/things', this.state.device);\r\n\r\n    this.props.history.push('/devices');\r\n  }\r\n\r\n  renderAddForm() {\r\n\r\n    const deviceTypes = [ \"light\", \"sensor\", \"device\", \"panel\" ];\r\n\r\n    return (\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Identifier</Form.Label>\r\n          <Form.Control \r\n            type=\"text\" \r\n            name=\"identifier\"\r\n            aria-describedby=\"idHelp\"\r\n            value={ this.state.device.identifier } \r\n            onChange={ e => this.handleChange(e) }/>\r\n\r\n            <Form.Text id=\"idHelp\" muted>\r\n              A unique string of characters that identifies the device. If not assigned, a random unique id is created.\r\n            </Form.Text>\r\n        </Form.Group>\r\n        \r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Device Name</Form.Label>\r\n          <Form.Control \r\n            type=\"text\" \r\n            name=\"name\"\r\n            aria-describedby=\"nameHelp\"\r\n            value={ this.state.device.name } \r\n            onChange={ e => this.handleChange(e) }/>\r\n\r\n            <Form.Text id=\"nameHelp\" muted>\r\n              {this.state.charLengths.name - this.state.device.name.length } characters remaining.\r\n            </Form.Text>\r\n        </Form.Group>\r\n        \r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>IP Address</Form.Label>\r\n          <Form.Control \r\n            type=\"text\" \r\n            name=\"ipAddress\"\r\n            placeholder=\"0.0.0.0\"\r\n            value={ this.state.device.ipAddress } \r\n            onChange={ e => this.handleChange(e) }/>\r\n        </Form.Group>\r\n        \r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control \r\n            as=\"textarea\" \r\n            name=\"shortDescription\"\r\n            aria-describedby=\"descHelp\"\r\n            value={ this.state.device.shortDescription }\r\n            onChange={ e => this.handleChange(e) }/>\r\n\r\n          <Form.Text id=\"descHelp\" muted>\r\n              {this.state.charLengths.shortDescription - this.state.device.shortDescription.length } characters remaining.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Type of Device</Form.Label>\r\n          <Form.Select aria-label=\"Select the type of device\">\r\n            <option>None</option>\r\n            { deviceTypes.map((deviceType, i) => \r\n              <option key={deviceType} value={i}>\r\n                { deviceType.replace(/^\\w/, (c) => c.toUpperCase()) }\r\n              </option>\r\n            )}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-4\">\r\n          <Form.Label>Tags</Form.Label>\r\n          <Form.Control \r\n            type=\"text\" \r\n            name=\"labels\"\r\n            placeholder=\"Sensor, Light, ...\"\r\n            value={ this.state.device.lables } \r\n            onChange={ e => this.handleChange(e) }/>\r\n        </Form.Group>\r\n\r\n        <Button color=\"primary\" onClick={this.handleSubmit}>Save</Button>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let content = this.renderAddForm();\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\">Add a Device</h1>\r\n        <p>Specify the details of the device and click 'Save'.</p>\r\n        { content }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // async populateThingData() {\r\n  //   const response = await fetch('api/things');\r\n  //   const data = await response.json();\r\n  //   this.setState({ things: data, loading: false });\r\n  // }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Stack, Badge, Button } from 'react-bootstrap';\r\n\r\nimport { CustomModal } from '../components/CustomModal';\r\n\r\nexport class DeviceDetails extends Component {\r\n\tstatic displayName = DeviceDetails.name;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tthing: {},\r\n\t\t\tshowDeleteModal: false,\r\n\t\t\tloading: true,\r\n\t\t\terror: null\r\n\t\t}\r\n\r\n\t\tthis.renderThingDetails = this.renderThingDetails.bind(this);\r\n\t\tthis.handleDeleteModalDisplay = this.handleDeleteModalDisplay.bind(this);\r\n\t\tthis.handleDeleteModalAccept = this.handleDeleteModalAccept.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { identifier } = this.props.match.params;\r\n\t\tthis.getThingDetails(identifier);\r\n\t}\r\n\r\n\tasync getThingDetails(deviceIdentifier) {\r\n\t\ttry {\r\n\t\t\tif (!deviceIdentifier || deviceIdentifier === '')\r\n\t\t\t\tthrow new Error('No device identifier provided.');\r\n\r\n\t\t\tconst response = await axios.get(`api/things/${deviceIdentifier}`);\r\n\t\t\tconsole.log(response);\r\n\t\t\tthis.setState({\r\n\t\t\t\tthing: response.data,\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\r\n\t\t} catch (e) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: e.Message\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trenderThingDetails() {\r\n\t\tconst { thing } = this.state;\r\n\r\n\t\tconst deviceTags = (\r\n\t\t\t<Stack direction=\"horizontal\" gap={1}>\r\n\t\t\t\t<i className=\"bi bi-tags me-1\"></i>\r\n\t\t\t\t{thing.labels.split(', ').map(label => \r\n\t\t\t\t\t<Badge key={label} bg=\"info\">\r\n\t\t\t\t\t\t{ label.replace(/^\\w/, (c) => c.toUpperCase()) }\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t)}\r\n\t\t\t</Stack>\r\n\t\t);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<Stack direction=\"vertical\" gap={2}>\r\n\t\t\t\t\t\t<h3 className=\"mb-0 display-6 fs-4 text-muted\">{thing.identifier}</h3>\r\n\t\t\t\t\t\t<h1>{thing.name}</h1>\r\n\r\n\t\t\t\t\t\t{ deviceTags }\r\n\r\n\t\t\t\t\t\t<p className=\"text-muted\">\r\n\t\t\t\t\t\t\t<i className=\"bi bi-globe me-1\"></i>\r\n\t\t\t\t\t\t\t{ thing.ipAddress }\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className=\"text-muted\">{ thing.shortDescription }</p>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Stack direction=\"horizontal\" gap={2}>\r\n\t\t\t\t\t\t<Button variant=\"light\" className=\"ms-auto\">\r\n\t\t\t\t\t\t\t<i className=\"bi bi-sliders\"></i>\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button variant=\"danger\" onClick={ e => this.handleDeleteModalDisplay(true) }>\r\n\t\t\t\t\t\t\t<i className=\"bi bi-x\"></i>\r\n\t\t\t\t\t\t\tRemove Device\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<hr/>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n\r\n\thandleDeleteModalDisplay(show) {\r\n\t\tthis.setState((state, _) => ({\r\n\t\t\tshowDeleteModal: show\r\n\t\t}));\r\n\t}\r\n\r\n\tasync handleDeleteModalAccept() {\r\n\t\tconsole.log('Removal was confirmed.');\r\n\t\tconst { identifier } = this.state.thing;\r\n\r\n\t\tthis.handleDeleteModalDisplay(false);\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`api/things/${identifier}`);\r\n\t\t\tthis.props.history.push('/devices');\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Can\\'t delete, an error was raised: ', error);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { loading, showDeleteModal } = this.state;\r\n\r\n\t\tconst deleteModalData = {\r\n\t\t\ttitle: `Remove ${this.state.thing.name}?`,\r\n\t\t\tbody: 'If you confirm this action, the device will be deleted permanently from the collection.',\r\n\t\t\taction: 'Remove',\r\n\t\t\tactionColor: 'danger',\r\n\t\t}\r\n\r\n\t\tlet thingDetails = loading \r\n\t\t\t? <h1>Loading</h1>\r\n\t\t\t: this.renderThingDetails();\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t{ thingDetails }\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Data</h3>\r\n\r\n\t\t\t\t\t<div className=\"text-center my-5\">\r\n\t\t\t\t\t\t<i className=\"bi bi-cloud-lightning fs-2\"></i>\r\n\t\t\t\t\t\t<p className=\"fs-5\">There is no data available right now.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<CustomModal \r\n\t\t\t\t\tshow={ showDeleteModal } \r\n\t\t\t\t\tdata={ deleteModalData } \r\n\t\t\t\t\tonAcceptModal={ this.handleDeleteModalAccept } \r\n\t\t\t\t\tonCloseModal={ () => this.handleDeleteModalDisplay(false) }/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {\r\n  Layout,\r\n  HomePage,\r\n  DeviceCollection,\r\n  AddDevice,\r\n  DeviceDetails\r\n} from './pages';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route exact path='/devices' component={DeviceCollection} />\r\n            <Route exact path='/devices/add' component={AddDevice} />\r\n            <Route path='/devices/:identifier' component={DeviceDetails} />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}